[{"E:\\Users\\alexa\\Documents\\scripts\\websites\\eroneko\\frontend\\src\\index.js":"1","E:\\Users\\alexa\\Documents\\scripts\\websites\\eroneko\\frontend\\src\\routes\\index.js":"2","E:\\Users\\alexa\\Documents\\scripts\\websites\\eroneko\\frontend\\src\\pages\\MostLiked\\index.js":"3","E:\\Users\\alexa\\Documents\\scripts\\websites\\eroneko\\frontend\\src\\components\\Container\\index.js":"4","E:\\Users\\alexa\\Documents\\scripts\\websites\\eroneko\\frontend\\src\\pages\\HomePage\\index.js":"5","E:\\Users\\alexa\\Documents\\scripts\\websites\\eroneko\\frontend\\src\\pages\\GalleryPage\\index.js":"6","E:\\Users\\alexa\\Documents\\scripts\\websites\\eroneko\\frontend\\src\\pages\\SearchPage\\index.js":"7","E:\\Users\\alexa\\Documents\\scripts\\websites\\eroneko\\frontend\\src\\pages\\DoujinPage\\index.js":"8","E:\\Users\\alexa\\Documents\\scripts\\websites\\eroneko\\frontend\\src\\pages\\MostViewed\\index.js":"9","E:\\Users\\alexa\\Documents\\scripts\\websites\\eroneko\\frontend\\src\\components\\Container\\styles.js":"10","E:\\Users\\alexa\\Documents\\scripts\\websites\\eroneko\\frontend\\src\\pages\\MostLiked\\styles.js":"11","E:\\Users\\alexa\\Documents\\scripts\\websites\\eroneko\\frontend\\src\\pages\\HomePage\\styles.js":"12","E:\\Users\\alexa\\Documents\\scripts\\websites\\eroneko\\frontend\\src\\pages\\GalleryPage\\styles.js":"13","E:\\Users\\alexa\\Documents\\scripts\\websites\\eroneko\\frontend\\src\\services\\api.js":"14","E:\\Users\\alexa\\Documents\\scripts\\websites\\eroneko\\frontend\\src\\hooks\\useTitle.js":"15","E:\\Users\\alexa\\Documents\\scripts\\websites\\eroneko\\frontend\\src\\components\\Main\\styles.js":"16","E:\\Users\\alexa\\Documents\\scripts\\websites\\eroneko\\frontend\\src\\pages\\SearchPage\\styles.js":"17","E:\\Users\\alexa\\Documents\\scripts\\websites\\eroneko\\frontend\\src\\static\\GlobalStyle.js":"18","E:\\Users\\alexa\\Documents\\scripts\\websites\\eroneko\\frontend\\src\\pages\\DoujinPage\\styles.js":"19","E:\\Users\\alexa\\Documents\\scripts\\websites\\eroneko\\frontend\\src\\hooks\\useScrollbar.js":"20","E:\\Users\\alexa\\Documents\\scripts\\websites\\eroneko\\frontend\\src\\pages\\MostViewed\\styles.js":"21","E:\\Users\\alexa\\Documents\\scripts\\websites\\eroneko\\frontend\\src\\components\\Section\\index.js":"22","E:\\Users\\alexa\\Documents\\scripts\\websites\\eroneko\\frontend\\src\\components\\Placeholder\\index.js":"23","E:\\Users\\alexa\\Documents\\scripts\\websites\\eroneko\\frontend\\src\\components\\FlySidebar\\index.js":"24","E:\\Users\\alexa\\Documents\\scripts\\websites\\eroneko\\frontend\\src\\components\\Nav\\index.js":"25","E:\\Users\\alexa\\Documents\\scripts\\websites\\eroneko\\frontend\\src\\components\\InfiniteScroller\\index.js":"26","E:\\Users\\alexa\\Documents\\scripts\\websites\\eroneko\\frontend\\src\\components\\Thumb\\index.js":"27","E:\\Users\\alexa\\Documents\\scripts\\websites\\eroneko\\frontend\\src\\components\\Section\\styles.js":"28","E:\\Users\\alexa\\Documents\\scripts\\websites\\eroneko\\frontend\\src\\components\\InfiniteScroller\\styles.js":"29","E:\\Users\\alexa\\Documents\\scripts\\websites\\eroneko\\frontend\\src\\components\\FlySidebar\\styles.js":"30","E:\\Users\\alexa\\Documents\\scripts\\websites\\eroneko\\frontend\\src\\components\\Nav\\styles.js":"31","E:\\Users\\alexa\\Documents\\scripts\\websites\\eroneko\\frontend\\src\\hooks\\useScroller.js":"32","E:\\Users\\alexa\\Documents\\scripts\\websites\\eroneko\\frontend\\src\\components\\Thumb\\styles.js":"33","E:\\Users\\alexa\\Documents\\scripts\\websites\\eroneko\\frontend\\src\\components\\Searchbar\\index.js":"34","E:\\Users\\alexa\\Documents\\scripts\\websites\\eroneko\\frontend\\src\\components\\Searchbar\\styles.js":"35","E:\\Users\\alexa\\Documents\\scripts\\websites\\eroneko\\frontend\\src\\components\\Comentaries\\index.js":"36","E:\\Users\\alexa\\Documents\\scripts\\websites\\eroneko\\frontend\\src\\components\\Comentaries\\styles.js":"37","E:\\Users\\alexa\\Documents\\scripts\\websites\\eroneko\\frontend\\src\\contexts\\loader\\index.js":"38","E:\\Users\\alexa\\Documents\\scripts\\websites\\eroneko\\frontend\\src\\components\\TopLoader\\index.js":"39","E:\\Users\\alexa\\Documents\\scripts\\websites\\eroneko\\frontend\\src\\components\\TopLoader\\styles.js":"40","E:\\Users\\alexa\\Documents\\scripts\\websites\\eroneko\\frontend\\src\\pages\\LoginPage\\index.js":"41","E:\\Users\\alexa\\Documents\\scripts\\websites\\eroneko\\frontend\\src\\pages\\LoginPage\\styles.js":"42","E:\\Users\\alexa\\Documents\\scripts\\websites\\eroneko\\frontend\\src\\contexts\\auth\\index.js":"43","E:\\Users\\alexa\\Documents\\scripts\\websites\\eroneko\\frontend\\src\\services\\firebase.js":"44","E:\\Users\\alexa\\Documents\\scripts\\websites\\eroneko\\frontend\\src\\pages\\SignUpPage\\index.js":"45","E:\\Users\\alexa\\Documents\\scripts\\websites\\eroneko\\frontend\\src\\pages\\SignUpPage\\styles.js":"46","E:\\Users\\alexa\\Documents\\scripts\\websites\\eroneko\\frontend\\src\\components\\Form\\index.js":"47","E:\\Users\\alexa\\Documents\\scripts\\websites\\eroneko\\frontend\\src\\components\\UserOptions\\index.js":"48","E:\\Users\\alexa\\Documents\\scripts\\websites\\eroneko\\frontend\\src\\components\\UserOptions\\styles.js":"49","E:\\Users\\alexa\\Documents\\scripts\\websites\\eroneko\\frontend\\src\\pages\\ProfilePage\\index.js":"50","E:\\Users\\alexa\\Documents\\scripts\\websites\\eroneko\\frontend\\src\\pages\\ProfilePage\\styles.js":"51"},{"size":216,"mtime":1612243342557,"results":"52","hashOfConfig":"53"},{"size":1696,"mtime":1612324849386,"results":"54","hashOfConfig":"53"},{"size":599,"mtime":1612122138981,"results":"55","hashOfConfig":"53"},{"size":1155,"mtime":1612243344900,"results":"56","hashOfConfig":"53"},{"size":2149,"mtime":1612907298744,"results":"57","hashOfConfig":"53"},{"size":3449,"mtime":1612904507440,"results":"58","hashOfConfig":"53"},{"size":1985,"mtime":1612077518625,"results":"59","hashOfConfig":"53"},{"size":10319,"mtime":1612908117213,"results":"60","hashOfConfig":"53"},{"size":589,"mtime":1612122138985,"results":"61","hashOfConfig":"53"},{"size":123,"mtime":1610054446692,"results":"62","hashOfConfig":"53"},{"size":223,"mtime":1611542216196,"results":"63","hashOfConfig":"53"},{"size":223,"mtime":1611542216195,"results":"64","hashOfConfig":"53"},{"size":784,"mtime":1611848032868,"results":"65","hashOfConfig":"53"},{"size":151,"mtime":1612064194216,"results":"66","hashOfConfig":"53"},{"size":305,"mtime":1612904388719,"results":"67","hashOfConfig":"53"},{"size":185,"mtime":1611929620743,"results":"68","hashOfConfig":"53"},{"size":1257,"mtime":1612077518723,"results":"69","hashOfConfig":"53"},{"size":479,"mtime":1611095215274,"results":"70","hashOfConfig":"53"},{"size":4920,"mtime":1612908116137,"results":"71","hashOfConfig":"53"},{"size":215,"mtime":1611350924581,"results":"72","hashOfConfig":"53"},{"size":223,"mtime":1611542216196,"results":"73","hashOfConfig":"53"},{"size":579,"mtime":1611370757699,"results":"74","hashOfConfig":"53"},{"size":336,"mtime":1611371579869,"results":"75","hashOfConfig":"53"},{"size":5805,"mtime":1612884995108,"results":"76","hashOfConfig":"53"},{"size":2092,"mtime":1612238267321,"results":"77","hashOfConfig":"53"},{"size":3769,"mtime":1612058804772,"results":"78","hashOfConfig":"53"},{"size":986,"mtime":1611848769660,"results":"79","hashOfConfig":"53"},{"size":1052,"mtime":1611929681215,"results":"80","hashOfConfig":"53"},{"size":183,"mtime":1611090382180,"results":"81","hashOfConfig":"53"},{"size":2076,"mtime":1612242296129,"results":"82","hashOfConfig":"53"},{"size":1314,"mtime":1612323992723,"results":"83","hashOfConfig":"53"},{"size":1179,"mtime":1612061980243,"results":"84","hashOfConfig":"53"},{"size":2239,"mtime":1612077451121,"results":"85","hashOfConfig":"53"},{"size":1182,"mtime":1612201534862,"results":"86","hashOfConfig":"53"},{"size":1153,"mtime":1612201600415,"results":"87","hashOfConfig":"53"},{"size":6666,"mtime":1612908049224,"results":"88","hashOfConfig":"53"},{"size":3433,"mtime":1612323378036,"results":"89","hashOfConfig":"53"},{"size":380,"mtime":1612061924640,"results":"90","hashOfConfig":"53"},{"size":442,"mtime":1612062036911,"results":"91","hashOfConfig":"53"},{"size":173,"mtime":1612060650040,"results":"92","hashOfConfig":"53"},{"size":2184,"mtime":1612902361513,"results":"93","hashOfConfig":"53"},{"size":2039,"mtime":1612902372870,"results":"94","hashOfConfig":"53"},{"size":1462,"mtime":1612884971608,"results":"95","hashOfConfig":"53"},{"size":534,"mtime":1612203857471,"results":"96","hashOfConfig":"53"},{"size":3042,"mtime":1612902440030,"results":"97","hashOfConfig":"53"},{"size":2012,"mtime":1612902431345,"results":"98","hashOfConfig":"53"},{"size":936,"mtime":1612201199984,"results":"99","hashOfConfig":"53"},{"size":2239,"mtime":1612885005383,"results":"100","hashOfConfig":"53"},{"size":1293,"mtime":1612324183325,"results":"101","hashOfConfig":"53"},{"size":2246,"mtime":1612328616312,"results":"102","hashOfConfig":"53"},{"size":1439,"mtime":1612329142368,"results":"103","hashOfConfig":"53"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},"x9r0k2",{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"106"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"106"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"106"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"106"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"106"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"106"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"106"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"106"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"106"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"106"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"106"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"186","messages":"187","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"106"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"106"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"106"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"106"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"106"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},"E:\\Users\\alexa\\Documents\\scripts\\websites\\eroneko\\frontend\\src\\index.js",[],["223","224"],"E:\\Users\\alexa\\Documents\\scripts\\websites\\eroneko\\frontend\\src\\routes\\index.js",[],"E:\\Users\\alexa\\Documents\\scripts\\websites\\eroneko\\frontend\\src\\pages\\MostLiked\\index.js",[],"E:\\Users\\alexa\\Documents\\scripts\\websites\\eroneko\\frontend\\src\\components\\Container\\index.js",[],"E:\\Users\\alexa\\Documents\\scripts\\websites\\eroneko\\frontend\\src\\pages\\HomePage\\index.js",["225","226"],"import React, { useState, useEffect, useCallback } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { api } from '../../services/api';\r\n\r\nimport Section from '../../components/Section';\r\nimport Thumb from '../../components/Thumb';\r\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\r\nimport TrendingUpIcon from '@material-ui/icons/TrendingUp';\r\nimport InfiniteScroller from '../../components/InfiniteScroller';\r\nimport PlaceholderLoader from '../../components/Placeholder';\r\n\r\nimport {\r\n    HomeContainer\r\n} from './styles';\r\n\r\nexport default function HomePage() {\r\n\r\n    const [popular, setPopular] = useState([]);\r\n\r\n    useEffect(() => {\r\n        get_popular();\r\n    }, []);\r\n\r\n    const get_popular = useCallback(() => {\r\n        api.get('/popular', { params: { limit: 6 } }).then(records => {\r\n            setPopular(records.data);\r\n        });\r\n    });\r\n\r\n    const Popular = () => {\r\n        return(\r\n            <>\r\n                {\r\n                    popular.length > 0\r\n                    ? popular.map(record => (\r\n                        <Link key={record.id} to={`/d/${record.id}`}>\r\n                            <Thumb  \r\n                                id={record.id} \r\n                                thumbnail={record.cover} \r\n                                lang={record.lang} \r\n                                title={record.title} />\r\n                        </Link>\r\n                      ))\r\n                    :   <>\r\n                            <PlaceholderLoader />\r\n                            <PlaceholderLoader />\r\n                            <PlaceholderLoader />\r\n                            <PlaceholderLoader />\r\n                            <PlaceholderLoader />\r\n                        </>\r\n                }\r\n            </>\r\n        )\r\n    }\r\n\r\n    return(\r\n        <HomeContainer>\r\n            <Section SectionTitle=\"Trending\" TitleIcon={TrendingUpIcon} Content={Popular} />\r\n            <Section \r\n                SectionTitle=\"Newest\" \r\n                TitleIcon={AccessTimeIcon} \r\n                Content={() => (<InfiniteScroller path='/'/>)} />\r\n        </HomeContainer>\r\n    )\r\n}","E:\\Users\\alexa\\Documents\\scripts\\websites\\eroneko\\frontend\\src\\pages\\GalleryPage\\index.js",["227"],"import React, { useState, useEffect } from 'react';\r\nimport { api } from '../../services/api';\r\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\r\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport useTitle from '../../hooks/useTitle';\r\nimport useScrollbar from '../../hooks/useScrollbar';\r\n\r\nimport {\r\n    ContentHolder,\r\n    GalleryContainer,\r\n    Image,\r\n    PaginationContainer,\r\n    PaginationHolder\r\n} from './styles';\r\n\r\n\r\nexport default function GalleryPage({ computedMatch, location }) {\r\n\r\n    const [page, setPage] = useState(0);\r\n    const [images, setImages] = useState([]);\r\n    const [title, setTitle] = useState(\"EroHoshi :: Free Hentai and Doujinshi Online Reader\");\r\n\r\n    useEffect(() => {\r\n        if(location.state){\r\n            setImages(location.state.images);\r\n            setPage(location.state.index);\r\n            setTitle(location.state.title);\r\n        }else{\r\n            api.get('/doujin', { params: { id: computedMatch.params.id } }).then(res => {\r\n                setImages(res.data.images);\r\n                setTitle(res.data.title);\r\n            });\r\n        }\r\n    }, [])\r\n\r\n    useTitle(title);\r\n    useScrollbar(page);\r\n\r\n    const handle_click = (evt) => {\r\n        setPage(prevPage => {\r\n            if(evt.pageX > (window.innerWidth / 2) && page < (images.length - 1)){\r\n                return prevPage + 1\r\n            }\r\n            if(evt.pageX < (window.innerWidth / 2) && page > 0){\r\n                return prevPage - 1\r\n            }\r\n\r\n            return prevPage\r\n        })\r\n    }\r\n\r\n    const handle_pass = (index) => {\r\n        setPage(prevPage => {\r\n            if(index < 0){\r\n                if(prevPage > 0){\r\n                    return prevPage + index\r\n                }\r\n            }else{\r\n                if(prevPage < images.length - 1){\r\n                    return prevPage + index\r\n                }\r\n            }\r\n\r\n            return prevPage\r\n        })\r\n    }\r\n\r\n    return(\r\n        <GalleryContainer>\r\n            <ContentHolder>\r\n                <Image src={images[page >= 0 ? page : 0]} onClick={handle_click}/>\r\n                <PaginationContainer>\r\n                    <PaginationHolder>\r\n                        <IconButton color=\"inherit\" onClick={() => handle_pass(-page)}>\r\n                            <SkipPreviousIcon color=\"inherit\" fontSize=\"large\"/>\r\n                        </IconButton>\r\n                        <IconButton color=\"inherit\" onClick={() => handle_pass(-1)}>\r\n                            <NavigateBeforeIcon color=\"inherit\" fontSize=\"large\"/>\r\n                        </IconButton>\r\n                        {page + 1} of {images.length}\r\n                        <IconButton color=\"inherit\" onClick={() => handle_pass(1)}>\r\n                            <NavigateNextIcon color=\"inherit\" fontSize=\"large\"/>\r\n                        </IconButton>\r\n                        <IconButton color=\"inherit\" onClick={() => handle_pass((images.length - 1) - page)}>\r\n                            <SkipNextIcon color=\"inherit\" fontSize=\"large\"/>\r\n                        </IconButton>\r\n                    </PaginationHolder>\r\n                </PaginationContainer>\r\n            </ContentHolder>\r\n        </GalleryContainer>           \r\n    )\r\n}","E:\\Users\\alexa\\Documents\\scripts\\websites\\eroneko\\frontend\\src\\pages\\SearchPage\\index.js",["228","229","230","231","232","233","234","235"],"import React, { useState, useEffect, useCallback } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { api, axios_object } from '../../services/api';\r\nimport InfiniteScroller from '../../components/InfiniteScroller';\r\n\r\nimport {\r\n    DoujinContainer,\r\n    HeaderContainer,\r\n    TitleContent,\r\n    TitleContainer,\r\n    Title,\r\n    GalleryContainer,\r\n    AditionalContainer,\r\n    Text\r\n} from './styles';\r\n\r\nexport default function SearchPage({ computedMatch, location }) {\r\n\r\n    const [query, setQuery] = useState(null);\r\n    const [sort, setSort] = useState('recent');\r\n    \r\n    useEffect(() => {\r\n        get_doujins();\r\n    }, [location.search]);\r\n    \r\n    const get_doujins = useCallback(() => {\r\n        if(location.state){\r\n            setQuery(location.state.query);\r\n        }else{\r\n            let [_, query_str] =  location.search.split(\"=\")\r\n            setQuery(query_str.split('%20').join(' '));\r\n        }\r\n    }, [location.search]);\r\n\r\n    const UpdatedScroller = useCallback(() => {\r\n        return(\r\n            <InfiniteScroller path='/search' aditional_body={{q: query, sort}} paginate_mode=\"offset\" />\r\n        );\r\n    }, [query])\r\n\r\n    return(\r\n        <DoujinContainer>\r\n            <HeaderContainer>\r\n                <TitleContent>\r\n                    <TitleContainer>\r\n                        {\r\n                            query \r\n                            ? <Title>Results for: {query}</Title>\r\n                            : <Title>There's no matches for your query...</Title>\r\n                        }\r\n                    </TitleContainer>\r\n                </TitleContent>\r\n                <AditionalContainer>\r\n                    <Text>Sort: {sort}</Text>\r\n                </AditionalContainer>\r\n            </HeaderContainer>\r\n            <GalleryContainer>\r\n                {query && query !== '' \r\n                ? <UpdatedScroller />\r\n                : null}\r\n            </GalleryContainer>\r\n        </DoujinContainer>\r\n    )\r\n}","E:\\Users\\alexa\\Documents\\scripts\\websites\\eroneko\\frontend\\src\\pages\\DoujinPage\\index.js",["236","237"],"import React, { useState, useEffect, useCallback, useContext } from 'react';\r\nimport { api } from '../../services/api';\r\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\r\nimport ThumbDownIcon from '@material-ui/icons/ThumbDown';\r\nimport useTitle from '../../hooks/useTitle';\r\nimport useScrollbar from '../../hooks/useScrollbar';\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\r\nimport Comentaries from '../../components/Comentaries';\r\nimport { LoaderContext } from '../../contexts/loader';\r\nimport { AuthContext } from '../../contexts/auth';\r\n\r\nimport {\r\n    DoujinContainer,\r\n    HeaderContainer,\r\n    ThumbContainer,\r\n    InformationContainer,\r\n    ThumbImage,\r\n    Text,\r\n    InformationHolder,\r\n    AditionalInformationHolder,\r\n    RatingHolder,\r\n    Score,\r\n    Content,\r\n    TitleContent,\r\n    TitleContainer,\r\n    Title,\r\n    GalleryContainer,\r\n    PreviewContainer,\r\n    Preview,\r\n    Button,\r\n    ButtonsContainer,\r\n    PostInformation,\r\n    ReadMoreHolder,\r\n    Tag\r\n} from './styles';\r\n\r\n\r\nexport default function DoujinPage({ computedMatch, location, history }) {\r\n\r\n    const [title, setTitle] = useState(\"EroHoshi :: Free Hentai and Doujinshi Online Reader\");\r\n    const [ID, setID] = useState(0);\r\n    const [secondaryTitle, setSecondaryTitle] = useState('');\r\n    const [previewList, setPreviewList] = useState([]);\r\n    const [artists, setArtists] = useState([]);\r\n    const [languages, setLanguages] = useState([]);\r\n    const [categories, setCategories] = useState([]);\r\n    const [characters, setCharacters] = useState([]);\r\n    const [parodies, setParodies] = useState([]);\r\n    const [groups, setGroups] = useState([]);\r\n    const [tags, setTags] = useState([]);\r\n    const [score, setScore] = useState(0);\r\n    const [createdDate, setCreatedDate] = useState(null);\r\n    const [views, setViews] = useState(0);\r\n    const [canLike, setCanLike] = useState(false);\r\n    const [canDislike, setCanDislike] = useState(false);\r\n    const [likes, setLikes] = useState([]);\r\n    const [dislikes, setDislikes] = useState([]);\r\n    const [showMore, setShowMore] = useState(false);\r\n    const [comments, setComments] = useState([]);\r\n    const [pages, setPages] = useState(0);\r\n\r\n    const { setIsLoading } = useContext(LoaderContext);    \r\n    const { currentUser, userToken } = useContext(AuthContext);   \r\n    \r\n    useEffect(() => {\r\n        get_doujins();\r\n    }, [location]);\r\n\r\n    useEffect(() => {\r\n        if(currentUser){\r\n            if(likes.indexOf(currentUser.uid) === -1){\r\n                setCanLike(true);\r\n            }else{\r\n                setCanLike(false);\r\n            }\r\n            if(dislikes.indexOf(currentUser.uid) === -1){\r\n                setCanDislike(true);\r\n            }else{\r\n                setCanDislike(false);\r\n            }\r\n        }\r\n    }, [currentUser, likes, dislikes]);\r\n\r\n    useTitle(title);\r\n    useScrollbar();\r\n\r\n    const handle_like = async (method) => {\r\n        if(method === 'like'){\r\n            const new_score = await api.post('/like', { 'uid': currentUser.uid, doujinId: ID.toString() }, { headers: { Authorization: `Bearer ${userToken}` } });\r\n            setScore(prevScore => {\r\n                if(prevScore !== new_score.data.score){\r\n                    return new_score.data.score\r\n                }\r\n                return prevScore\r\n            });\r\n            setLikes(prevLikes => {\r\n                return [...prevLikes, currentUser.uid]\r\n            });\r\n            setDislikes(prevDislikes => {\r\n                return prevDislikes.filter(id => id !== currentUser.uid);\r\n            });\r\n        }else{\r\n            const new_score = await api.post('/dislike', { 'uid': currentUser.uid, doujinId: ID.toString() }, { headers: { Authorization: `Bearer ${userToken}` } });\r\n            setScore(prevScore => {\r\n                if(prevScore !== new_score.data.score){\r\n                    return new_score.data.score\r\n                }\r\n                return prevScore\r\n            })\r\n            setDislikes(prevDislike => {\r\n                return [...prevDislike, currentUser.uid]\r\n            });\r\n            setLikes(prevLikes => {\r\n                return prevLikes.filter(id => id !== currentUser.uid);\r\n            });\r\n        }\r\n    }\r\n\r\n    const to_read = (index) => {\r\n        history.push({\r\n            pathname: `/r/${ID}`,\r\n            state: { images: previewList, index, title }\r\n        })\r\n    }\r\n\r\n    const populate_state = (data) => {\r\n        setTitle(data.title);\r\n        setID(data.id);\r\n        setSecondaryTitle(data.secondary_title);\r\n        setPreviewList(data.images);\r\n        setArtists(data.artists);\r\n        setLanguages(data.languages);\r\n        setCategories(data.categories);\r\n        setCharacters(data.characters);\r\n        setParodies(data.parodies);\r\n        setGroups(data.groups);\r\n        setTags(data.tags);\r\n        setScore(data.score || 0);\r\n        setViews(data.views || 0);\r\n        setCreatedDate(data.created_date);\r\n        setLikes(data.likes instanceof Array ? data.likes : []);\r\n        setDislikes(data.dislikes instanceof Array ? data.dislikes : []);\r\n        setComments(data.comments || []);\r\n        setPages(data.total_pages);\r\n    }\r\n    \r\n    const toggle_show = () => {\r\n        setShowMore(prevShow => {\r\n            return !prevShow;\r\n        });\r\n    }\r\n\r\n    const get_doujins = useCallback(() => {\r\n\r\n        if(location.state){\r\n            populate_state(location.state);\r\n        }else{\r\n            setIsLoading(true);\r\n            api.get(`/doujin`, { params: { id: computedMatch.params.id } }).then(record => {\r\n                const data = record.data;\r\n                if(data){\r\n                    populate_state(data);\r\n                    setIsLoading(false);\r\n                }\r\n            });\r\n        }\r\n    }, [location.state]);\r\n\r\n    return(\r\n        <DoujinContainer>\r\n            <HeaderContainer>\r\n                <TitleContent>\r\n                    <TitleContainer>\r\n                        <Title>{title}</Title>\r\n                    </TitleContainer>\r\n                </TitleContent>\r\n                <Content>\r\n                    <ThumbContainer>\r\n                        <ThumbImage src={previewList ? previewList[0] : null} />\r\n                    </ThumbContainer>\r\n                    <InformationContainer>\r\n                        <InformationHolder>\r\n                            <div><Text><strong>Alternative Title:</strong> {secondaryTitle}</Text></div>\r\n                            <div><Text><strong>Artists:</strong></Text>{artists.length > 0 ? artists.map(artist => {return <Tag key={artist}>{artist}</Tag>}) : null}</div>\r\n                            <div><Text><strong>Languages:</strong></Text> {languages.length > 0 ? languages.map(language => {return <Tag key={language}>{language}</Tag>}) : null}</div>\r\n                            <div><Text><strong>Categories:</strong></Text> {categories.length > 0 ? categories.map(category => {return <Tag key={category}>{category}</Tag>}) : null}</div>\r\n                            <div><Text><strong>Characters:</strong></Text> {characters.length > 0 ? characters.map(artist => {return <Tag key={artist}>{artist}</Tag>}) : null}</div>\r\n                            <div><Text><strong>Parodies:</strong></Text> {parodies.length > 0 ? parodies.map(parody => {return <Tag key={parody}>{parody}</Tag>}) : null}</div>\r\n                            <div><Text><strong>Groups:</strong></Text> {groups.length > 0 ? groups.map(group => {return <Tag key={group}>{group}</Tag>}) : null}</div>\r\n                            <div><Text><strong>Tags:</strong></Text> {tags.length > 0 ? tags.map(tag => {return <Tag key={tag}>{tag}</Tag>}) : null}</div>\r\n                        </InformationHolder>\r\n                        <AditionalInformationHolder>\r\n                            <RatingHolder>\r\n                                <Text><strong>Score</strong></Text>\r\n                                <Score>{score}</Score>\r\n                            </RatingHolder>\r\n                            <ButtonsContainer>\r\n                                <Button disabled={!canLike} onClick={() => handle_like('like')}>\r\n                                    <ThumbUpIcon /> Like ({likes.length})\r\n                                </Button>\r\n                                <Button disabled={!canDislike} onClick={() => handle_like('dislike')}>\r\n                                    <ThumbDownIcon /> Dislike ({dislikes.length})\r\n                                </Button>\r\n                            </ButtonsContainer>\r\n                            <PostInformation>\r\n                                <Text>ID: {ID}</Text>\r\n                                <Text>Upload date: {createdDate}</Text>\r\n                                <Text>Pages: {pages}</Text>\r\n                                <Text>Views: {views}</Text>\r\n                            </PostInformation>\r\n                        </AditionalInformationHolder>\r\n                    </InformationContainer>\r\n                </Content>\r\n            </HeaderContainer>\r\n            <GalleryContainer>\r\n                {\r\n                    previewList.length > 0 && showMore === false\r\n                    ? previewList.slice(0, 10).map((record, index) => (\r\n                        <PreviewContainer key={Math.random()} onClick={() => to_read(index)}>\r\n                            <Preview src={record} />\r\n                        </PreviewContainer>\r\n                      ))\r\n                    : previewList.map((record, index) => (\r\n                        <PreviewContainer key={Math.random()} onClick={() => to_read(index)}>\r\n                            <Preview src={record} />\r\n                        </PreviewContainer>\r\n                      ))\r\n                }\r\n                <ReadMoreHolder>\r\n                    <Button color=\"inherit\" onClick={toggle_show}>\r\n                        <MoreHorizIcon color=\"inherit\" fontSize=\"large\" /> \r\n                        {showMore === false ? \"Show More\" : \"Show Less\"}\r\n                    </Button>\r\n                </ReadMoreHolder>\r\n            </GalleryContainer>\r\n            <Comentaries user_id={currentUser ? currentUser.uid : null} doujin_id={ID} comments={comments} user_token={userToken} current_user={currentUser}/>\r\n        </DoujinContainer>\r\n    )\r\n}","E:\\Users\\alexa\\Documents\\scripts\\websites\\eroneko\\frontend\\src\\pages\\MostViewed\\index.js",[],"E:\\Users\\alexa\\Documents\\scripts\\websites\\eroneko\\frontend\\src\\components\\Container\\styles.js",[],"E:\\Users\\alexa\\Documents\\scripts\\websites\\eroneko\\frontend\\src\\pages\\MostLiked\\styles.js",[],"E:\\Users\\alexa\\Documents\\scripts\\websites\\eroneko\\frontend\\src\\pages\\HomePage\\styles.js",[],"E:\\Users\\alexa\\Documents\\scripts\\websites\\eroneko\\frontend\\src\\pages\\GalleryPage\\styles.js",[],"E:\\Users\\alexa\\Documents\\scripts\\websites\\eroneko\\frontend\\src\\services\\api.js",[],"E:\\Users\\alexa\\Documents\\scripts\\websites\\eroneko\\frontend\\src\\hooks\\useTitle.js",["238"],"import React, { useEffect } from 'react';\r\n\r\nexport default function Title(doujin_title){\r\n\r\n    useEffect(() => {\r\n        document.title = doujin_title;\r\n\r\n        return () => {\r\n            document.title = \"EroHoshi :: Free Hentai and Doujinshi Online Reader\"\r\n        };\r\n    }, [doujin_title])\r\n\r\n}","E:\\Users\\alexa\\Documents\\scripts\\websites\\eroneko\\frontend\\src\\components\\Main\\styles.js",[],"E:\\Users\\alexa\\Documents\\scripts\\websites\\eroneko\\frontend\\src\\pages\\SearchPage\\styles.js",[],"E:\\Users\\alexa\\Documents\\scripts\\websites\\eroneko\\frontend\\src\\static\\GlobalStyle.js",[],"E:\\Users\\alexa\\Documents\\scripts\\websites\\eroneko\\frontend\\src\\pages\\DoujinPage\\styles.js",[],"E:\\Users\\alexa\\Documents\\scripts\\websites\\eroneko\\frontend\\src\\hooks\\useScrollbar.js",["239"],"import React, { useEffect } from 'react';\r\n\r\nexport default function useScroller(reactive_var){\r\n    \r\n    useEffect(() => {\r\n        window.scrollTo({\r\n            top: 0,\r\n        });\r\n    }, [reactive_var]);\r\n\r\n}","E:\\Users\\alexa\\Documents\\scripts\\websites\\eroneko\\frontend\\src\\pages\\MostViewed\\styles.js",[],"E:\\Users\\alexa\\Documents\\scripts\\websites\\eroneko\\frontend\\src\\components\\Section\\index.js",[],"E:\\Users\\alexa\\Documents\\scripts\\websites\\eroneko\\frontend\\src\\components\\Placeholder\\index.js",[],"E:\\Users\\alexa\\Documents\\scripts\\websites\\eroneko\\frontend\\src\\components\\FlySidebar\\index.js",["240","241","242","243","244","245","246","247","248","249"],"import React, { Fragment, useContext, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { api } from '../../services/api';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport LocalOfferIcon from '@material-ui/icons/LocalOffer';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport AccountBoxIcon from '@material-ui/icons/AccountBox';\r\nimport PeopleAltIcon from '@material-ui/icons/PeopleAlt';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport BubbleChartIcon from '@material-ui/icons/BubbleChart';\r\nimport EmojiEmotionsIcon from '@material-ui/icons/EmojiEmotions';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport FindInPageIcon from '@material-ui/icons/FindInPage';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport AllInclusiveIcon from '@material-ui/icons/AllInclusive';\r\nimport MeetingRoomIcon from '@material-ui/icons/MeetingRoom';\r\nimport { ClickAwayListener } from '@material-ui/core';\r\n\r\nimport { AuthContext } from '../../contexts/auth';\r\n\r\nimport { \r\n    SidebarContainer, \r\n    UnorderedList, \r\n    ListItem, \r\n    Separator, \r\n    MenuHolder,\r\n    UserHolder,\r\n    UserAvatar,\r\n    UserGreetings\r\n} from './styles';\r\n\r\nexport default function FlySidebar({ sidebarStatus, setSidebarStatus, history }){\r\n\r\n    const { currentUser, signOut } = useContext(AuthContext);\r\n\r\n    const handle_random = async () => {\r\n        const random_doujin = await api.get('/random');\r\n        history.push({\r\n            pathname: `/d/${random_doujin.data.id}`,\r\n            state: random_doujin.data\r\n        });\r\n    }\r\n\r\n    const handle_click_away = () => {\r\n        setSidebarStatus(prevStatus => {\r\n            if(prevStatus !== false){\r\n                return false;\r\n            }\r\n\r\n            return prevStatus;\r\n        });\r\n    }\r\n\r\n    const to_login = () => {\r\n        history.push({\r\n            pathname: \"/login\"\r\n        })\r\n    }\r\n\r\n    const to_profile = () => {\r\n        history.push({\r\n            pathname: `/p/${currentUser.uid}`\r\n        })\r\n    }\r\n\r\n    return(\r\n        <ClickAwayListener onClickAway={handle_click_away} mouseEvent=\"onMouseDown\">\r\n            <SidebarContainer sidebarStatus={sidebarStatus === true ? '0rem' : '-25rem'}>\r\n                <MenuHolder>\r\n                    <IconButton size=\"small\" color=\"inherit\" onClick={() => setSidebarStatus(!sidebarStatus)}>\r\n                        <Clear color=\"inherit\" fontSize=\"large\" />\r\n                    </IconButton>\r\n                </MenuHolder>\r\n                    <UserHolder>\r\n                        <UserAvatar src={currentUser ? currentUser.photoURL : \"https://previews.123rf.com/images/apoev/apoev1709/apoev170900088/85467744-default-avatar-anime-girl-profile-icon-grey-photo-manga-placeholder.jpg\"}/>\r\n                        <UserGreetings>\r\n                            Welcome back,<span>{currentUser ? currentUser.displayName : \"Guest\"}</span>\r\n                        </UserGreetings>\r\n                    </UserHolder>\r\n                <UnorderedList>\r\n                    <ListItem onClick={handle_random}><AllInclusiveIcon fontSize='large' color='inherit'/> Random</ListItem>\r\n                    {/* <ListItem><InfoIcon fontSize='large' color='inherit'/> Information</ListItem> */}\r\n                </UnorderedList>\r\n                {/* <UnorderedList>\r\n                <Separator />\r\n                    <ListItem><LocalOfferIcon fontSize='large' color='inherit'/> Tags</ListItem>\r\n                    <ListItem><EmojiEmotionsIcon fontSize='large' color='inherit'/> Parodys</ListItem>\r\n                    <ListItem><PersonIcon fontSize='large' color='inherit'/> Character</ListItem>\r\n                    <ListItem><BubbleChartIcon fontSize='large' color='inherit'/> Artists</ListItem>\r\n                    <ListItem><PeopleAltIcon fontSize='large' color='inherit'/> Group</ListItem>\r\n                </UnorderedList> */}\r\n                <UnorderedList>\r\n                <Separator />\r\n                    <Link to=\"/s/views\"><ListItem><VisibilityIcon fontSize='large' color='inherit'/> Most Viewed</ListItem></Link>\r\n                    <Link to=\"/s/highscore\"><ListItem><FavoriteIcon fontSize='large' color='inherit'/> Most Liked</ListItem></Link>\r\n                    {/* <ListItem><FindInPageIcon fontSize='large' color='inherit'/> Most Searched</ListItem> */}\r\n                </UnorderedList>\r\n                <UnorderedList>\r\n                    <Separator />\r\n                    \r\n                    {currentUser\r\n                        ?   <Fragment>\r\n                                {/* <ListItem onClick={to_profile}>\r\n                                    <AccountBoxIcon color='inherit' fontSize='inherit'/>\r\n                                    <span>\r\n                                        Profile\r\n                                    </span>\r\n                                </ListItem> */}\r\n                                <ListItem onClick={signOut}>\r\n                                    <ExitToAppIcon color='inherit' fontSize='inherit'/>\r\n                                    <span>\r\n                                        Logout\r\n                                    </span>\r\n                                </ListItem>\r\n                            </Fragment>\r\n                        :   <ListItem onClick={to_login}>\r\n                                <MeetingRoomIcon color='inherit' fontSize='inherit'/>\r\n                                <span>\r\n                                    Login\r\n                                </span>\r\n                            </ListItem>}\r\n                </UnorderedList>\r\n            </SidebarContainer>\r\n        </ClickAwayListener>\r\n    );\r\n}","E:\\Users\\alexa\\Documents\\scripts\\websites\\eroneko\\frontend\\src\\components\\Nav\\index.js",["250","251"],"import React, { useState, useEffect, useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Searchbar from '../Searchbar';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { AuthContext } from '../../contexts/auth';\r\n\r\nimport logo from '../../static/images/logo.png';\r\n\r\nimport { \r\n    NavContainer,\r\n    Logo, \r\n    MenuHolder, \r\n    MenuItem,\r\n    UnorderedList,\r\n    UserAvatar,\r\n    LoginButton\r\n} from './styles';\r\nimport { ListItem } from '@material-ui/core';\r\nimport UserOptions from '../UserOptions';\r\n\r\nexport default function Nav({ sidebarStatus, setSidebarStatus, navbarStatus, history }) {\r\n    \r\n    const [query, setQuery] = useState(null);\r\n    const { currentUser } = useContext(AuthContext);\r\n    \r\n    useEffect(() => {\r\n        if(query && query !== ''){\r\n            history.push({\r\n                pathname: `/q/search`,\r\n                search: `?q=${query}`,\r\n                state: {query}\r\n            });\r\n        }\r\n    }, [query])\r\n\r\n    const handle_login = () => {\r\n        return history.push({\r\n            pathname: \"/login\"\r\n        });\r\n    }\r\n\r\n    return (\r\n        <NavContainer display={navbarStatus === false ? \"none\" : \"flex\"}>\r\n            <MenuHolder>\r\n                <MenuItem>\r\n                    <IconButton color='inherit' size=\"small\" onClick={() => setSidebarStatus(!sidebarStatus)}>\r\n                        <MenuIcon fontSize='large'/>\r\n                    </IconButton>\r\n                </MenuItem>\r\n                <MenuItem>\r\n                    <Link to=\"/\">\r\n                        <Logo src={logo}/>\r\n                    </Link>\r\n                </MenuItem>\r\n            </MenuHolder>\r\n            <Searchbar setQuery={setQuery} />\r\n            <UnorderedList>\r\n                <ListItem>\r\n                    {currentUser \r\n                        ? <UserOptions />\r\n                        : <LoginButton onClick={handle_login}>Login</LoginButton>}\r\n                </ListItem>\r\n            </UnorderedList>\r\n        </NavContainer>\r\n    )\r\n}\r\n","E:\\Users\\alexa\\Documents\\scripts\\websites\\eroneko\\frontend\\src\\components\\InfiniteScroller\\index.js",["252","253"],"import React, { Fragment, useCallback, useRef, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Thumb from '../Thumb';\r\nimport useScroller from '../../hooks/useScroller';\r\nimport PlaceholderLoader from '../../components/Placeholder';\r\n\r\nimport { ScrollerContainer } from './styles';\r\n\r\nexport default function InfiniteScroller({ path, aditional_body, paginate_mode }){\r\n\r\n    const [ offset, setOffset ] = useState(paginate_mode === 'offset' ? 0 : undefined);\r\n\r\n    const {\r\n        doujins,\r\n        error,\r\n        hasMore,\r\n        loading,\r\n        notFound\r\n    } = useScroller(offset, path, { params: { last_id: offset, ...aditional_body } });\r\n\r\n    const observer = useRef(null);\r\n\r\n    const get_last_div = useCallback((node) => {\r\n        if(loading) return;\r\n        if(observer.current) observer.current.disconnect();\r\n        observer.current = new IntersectionObserver(entries => {\r\n            if(entries[0].isIntersecting){\r\n                if(paginate_mode === 'offset'){\r\n                    setOffset(prevOffset => {return prevOffset + doujins.size});\r\n                }else{\r\n                    setOffset(Array.from(doujins)[doujins.size - 1][1].id);\r\n                }\r\n            }\r\n        });\r\n        if(node) observer.current.observe(node);\r\n    }, [loading, hasMore]);\r\n\r\n    return(\r\n        <Fragment>\r\n            <ScrollerContainer>\r\n                {Array.from(doujins).length > 0\r\n                    ?   Array.from(doujins).map((doujin, index) => {\r\n                            if(doujins.size - 1 === index){\r\n                                return (<Link ref={get_last_div} key={doujin[1].id} to={`/d/${doujin[1].id}`}>\r\n                                            <Thumb \r\n                                                id={doujin[1].id} \r\n                                                thumbnail={doujin[1].cover} \r\n                                                lang={doujin[1].lang} \r\n                                                title={doujin[1].title} />\r\n                                        </Link>)\r\n                            }else{\r\n                                return (<Link key={doujin[1].id} to={`/d/${doujin[1].id}`}>\r\n                                        <Thumb \r\n                                            id={doujin[1].id} \r\n                                            thumbnail={doujin[1].cover} \r\n                                            lang={doujin[1].lang} \r\n                                            title={doujin[1].title} />\r\n                                    </Link>)\r\n                            }})\r\n                    :   notFound === false \r\n                        ?   <>\r\n                                <PlaceholderLoader />\r\n                                <PlaceholderLoader />\r\n                                <PlaceholderLoader />\r\n                                <PlaceholderLoader />\r\n                                <PlaceholderLoader />\r\n                                <PlaceholderLoader />\r\n                                <PlaceholderLoader />\r\n                                <PlaceholderLoader />\r\n                                <PlaceholderLoader />\r\n                                <PlaceholderLoader />\r\n                                <PlaceholderLoader />\r\n                                <PlaceholderLoader />\r\n                            </>\r\n                        : <h2>Was not found any doujins about your query... :/</h2>\r\n                }\r\n            </ScrollerContainer>\r\n            <Fragment>\r\n                {hasMore === false && notFound === false\r\n                    ? <h2>You've scrolled all the content. Congratz xD</h2>\r\n                    : null}\r\n            </Fragment>\r\n        </Fragment>\r\n    );\r\n}","E:\\Users\\alexa\\Documents\\scripts\\websites\\eroneko\\frontend\\src\\components\\Thumb\\index.js",[],"E:\\Users\\alexa\\Documents\\scripts\\websites\\eroneko\\frontend\\src\\components\\Section\\styles.js",[],"E:\\Users\\alexa\\Documents\\scripts\\websites\\eroneko\\frontend\\src\\components\\InfiniteScroller\\styles.js",[],"E:\\Users\\alexa\\Documents\\scripts\\websites\\eroneko\\frontend\\src\\components\\FlySidebar\\styles.js",[],"E:\\Users\\alexa\\Documents\\scripts\\websites\\eroneko\\frontend\\src\\components\\Nav\\styles.js",[],"E:\\Users\\alexa\\Documents\\scripts\\websites\\eroneko\\frontend\\src\\hooks\\useScroller.js",["254","255","256"],"import React, { useEffect, useState, useContext } from 'react';\r\nimport { api } from '../services/api';\r\n\r\nexport default function useScroller(offset, route_path, body){\r\n    \r\n\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(false);\r\n    const [doujins, setDoujins] = useState(new Map());\r\n    const [hasMore, setHasMore] = useState(true);\r\n    const [notFound, setNotFound] = useState(false);\r\n    \r\n    useEffect(() => {\r\n        setLoading(true);\r\n        setError(false);\r\n        api.get(route_path, body).then(res => {\r\n            if(res.data.length > 0){\r\n                let current_doujins = Array.from(doujins);\r\n                let new_doujins = res.data.map(douj => {return [douj.id, douj]});\r\n    \r\n                setDoujins(new Map([...current_doujins, ...new_doujins]));\r\n    \r\n                setLoading(false);\r\n                setHasMore(true);\r\n            }else{\r\n                setHasMore(false);\r\n                if(doujins.size === 0){\r\n                    setNotFound(true);\r\n                }\r\n            }\r\n        });\r\n    }, [ offset ])\r\n\r\n    return { loading, error, doujins, hasMore, notFound };\r\n\r\n}","E:\\Users\\alexa\\Documents\\scripts\\websites\\eroneko\\frontend\\src\\components\\Thumb\\styles.js",[],"E:\\Users\\alexa\\Documents\\scripts\\websites\\eroneko\\frontend\\src\\components\\Searchbar\\index.js",["257"],"import React, { useCallback, useEffect, useState } from 'react';\r\nimport { api } from '../../services/api';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { Form, Input } from '../Form'; \r\n\r\nimport { SearchContainer, SearchButton } from './styles';\r\n\r\nfunction Searchbar({ setQuery }) {\r\n\r\n    const [placeholder, setPlaceholder] = useState(0);\r\n    \r\n    const handle_search = (evt) => {\r\n\r\n        const { query } = evt;\r\n        if(query && query !== ''){\r\n            setQuery(query);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        get_total_doujins();\r\n    }, []);\r\n\r\n    const get_total_doujins = useCallback(() => {\r\n        api.get('/totalDoujins').then(res => {\r\n            setPlaceholder(res.data.total_doujins);\r\n        })\r\n    }, []);\r\n\r\n    return(\r\n        <SearchContainer>\r\n            <Form onSubmit={handle_search}>\r\n                <Input name=\"query\" placeholder={`Search by ${placeholder} doujins...`} type=\"search\" />\r\n                <SearchButton color='inherit'>\r\n                    <SearchIcon fontSize=\"large\"/>\r\n                </SearchButton>\r\n            </Form>\r\n        </SearchContainer>\r\n    );\r\n}\r\n\r\nexport default Searchbar;","E:\\Users\\alexa\\Documents\\scripts\\websites\\eroneko\\frontend\\src\\components\\Searchbar\\styles.js",[],"E:\\Users\\alexa\\Documents\\scripts\\websites\\eroneko\\frontend\\src\\components\\Comentaries\\index.js",["258"],"import React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport { api } from '../../services/api';\r\nimport { Form, Input } from '../Form';\r\n\r\nimport { \r\n    ComentariesContainer,\r\n    ComentariesHolder, \r\n    ComentaryHolder,\r\n    ComentaryTextHolder,\r\n    UserPictureHolder,\r\n    UserPicture,\r\n    ComentaryText, \r\n    ComentaryInformation,\r\n    UserName,\r\n    AnswerHolder,\r\n    MainCommentaryHolder,\r\n    InputContainer,\r\n    CommentButton} from './styles';\r\n\r\nexport default function Comentaries({user_id, doujin_id, comments, user_token, current_user}) {;\r\n\r\n    const [commentariesList, setCommentariesList] = useState(new Map([]));\r\n\r\n    useEffect(async () => {\r\n\r\n        const current_comments = await Promise.all(comments.map(async comment => {\r\n            const user_data = await api.get(`/user/${comment.userId}`);\r\n            \r\n            const answers = await Promise.all(comment.answers.map(async answer => {\r\n                const user_data = await api.get(`/user/${answer.userId}`);\r\n                return {...answer, ...{user_name: user_data.data.displayName, avatar: user_data.data.photoURL}}\r\n            }))\r\n\r\n            comment['answers'] = answers;\r\n\r\n            return [comment.commentId, {...comment, ...{user_name: user_data.data.displayName, avatar: user_data.data.photoURL}}]\r\n            \r\n        }));\r\n\r\n        setCommentariesList(new Map(current_comments))\r\n\r\n    }, [comments]);\r\n\r\n    const create_commentary = async (evt, { reset }) => {\r\n        \r\n        const { text } = evt;\r\n\r\n        if(text){\r\n            const res = await api.post('/comment', { doujinId: doujin_id.toString(), userId: user_id, text }, { headers: { Authorization: `Bearer ${user_token}` } });\r\n            const current_comments = Array.from(commentariesList);\r\n            setCommentariesList(new Map([...[[res.data.commentId, {...res.data, user_name: current_user.displayName, avatar: current_user.photoURL}]], ...current_comments]));\r\n            reset();\r\n        }\r\n\r\n    }\r\n\r\n    const create_answer = async (evt, comment_id, { reset }) => {\r\n\r\n        const { text } = evt;\r\n\r\n        if(text){\r\n            const new_answer_response = await api.post(`/comment/${comment_id}`, { doujinId: doujin_id.toString(), userId: user_id, text }, { headers: { Authorization: `Bearer ${user_token}` } });\r\n            const current_comments = commentariesList;\r\n\r\n            const this_comment = current_comments.get(comment_id);\r\n            this_comment.answers.push({...new_answer_response.data, user_name: current_user.displayName, avatar: current_user.photoURL});\r\n\r\n            current_comments.set(comment_id, this_comment)\r\n\r\n            const copying_map_to_array = Array.from(current_comments);\r\n\r\n            setCommentariesList(new Map(copying_map_to_array));\r\n            reset();\r\n        }\r\n\r\n    }\r\n\r\n    const AnswerObject = ({text, user_name, created_date, avatar}) => {\r\n        return(\r\n            <AnswerHolder>\r\n                <UserPictureHolder>\r\n                    <UserPicture src={avatar}/>\r\n                </UserPictureHolder>\r\n                <ComentaryTextHolder>\r\n                    <ComentaryInformation>\r\n                        <UserName created_date={created_date}>{user_name}</UserName>\r\n                    </ComentaryInformation>\r\n                    <ComentaryText>\r\n                        {text}\r\n                    </ComentaryText>\r\n                </ComentaryTextHolder>\r\n            </AnswerHolder>\r\n        );\r\n    }\r\n    \r\n    const CommentaryObject = ({text, user_name, created_date, avatar}) => {\r\n        \r\n        return(\r\n            <MainCommentaryHolder>\r\n                <UserPictureHolder>\r\n                    <UserPicture src={avatar}/>\r\n                </UserPictureHolder>\r\n                <ComentaryTextHolder>\r\n                    <ComentaryInformation>\r\n                        <UserName created_date={created_date}>{user_name}</UserName>\r\n                    </ComentaryInformation>\r\n                    <ComentaryText>\r\n                        {text}\r\n                    </ComentaryText>\r\n                </ComentaryTextHolder>\r\n            </MainCommentaryHolder>\r\n        );\r\n    }\r\n\r\n\r\n    return (\r\n        <ComentariesContainer>\r\n            <InputContainer>\r\n                {current_user\r\n                    ?   <Form onSubmit={create_commentary}>\r\n                            <Input name=\"text\" placeholder=\"Tell what you think about this piece of cake.\" wrap=\"soft\"/>\r\n                            <CommentButton><SendIcon fontSize=\"large\"/></CommentButton>\r\n                        </Form>\r\n                    : <h3>You must login to interact with other people. {<Link to=\"/login\">Sign In</Link>}</h3>}\r\n            </InputContainer>\r\n            <ComentariesHolder>\r\n                {commentariesList && commentariesList.size > 0\r\n                    ?   Array.from(commentariesList).map(comment => {\r\n                            return <ComentaryHolder key={comment[0]}>\r\n                                        <CommentaryObject text={comment[1].text} user_name={comment[1].user_name} created_date={comment[1].timestamp} avatar={comment[1].avatar}/>\r\n                                        {comment[1].answers && comment[1].answers.length > 0\r\n                                            ?   comment[1].answers.map(answer => {\r\n                                                    return <AnswerObject text={answer.text} user_name={answer.user_name} created_date={answer.timestamp} avatar={answer.avatar}/>\r\n                                                })\r\n                                            : null}\r\n                                        {current_user\r\n                                            ?   <Form onSubmit={(evt, {...rest}) => create_answer(evt, comment[0], {...rest})}>\r\n                                                    <UserPictureHolder>\r\n                                                        <UserPicture src={current_user.photoURL}/>\r\n                                                    </UserPictureHolder>\r\n                                                    <Input name=\"text\" placeholder=\"your chance of reply.\" />\r\n                                                    <CommentButton><SendIcon fontSize=\"default\"/></CommentButton>\r\n                                                </Form>\r\n                                            : null}\r\n                                    </ComentaryHolder>})\r\n                    :   <h2>There's no commentaries yet...</h2>}\r\n            </ComentariesHolder>\r\n        </ComentariesContainer>\r\n    )\r\n}\r\n","E:\\Users\\alexa\\Documents\\scripts\\websites\\eroneko\\frontend\\src\\components\\Comentaries\\styles.js",[],"E:\\Users\\alexa\\Documents\\scripts\\websites\\eroneko\\frontend\\src\\contexts\\loader\\index.js",[],"E:\\Users\\alexa\\Documents\\scripts\\websites\\eroneko\\frontend\\src\\components\\TopLoader\\index.js",[],"E:\\Users\\alexa\\Documents\\scripts\\websites\\eroneko\\frontend\\src\\components\\TopLoader\\styles.js",[],"E:\\Users\\alexa\\Documents\\scripts\\websites\\eroneko\\frontend\\src\\pages\\LoginPage\\index.js",[],"E:\\Users\\alexa\\Documents\\scripts\\websites\\eroneko\\frontend\\src\\pages\\LoginPage\\styles.js",[],"E:\\Users\\alexa\\Documents\\scripts\\websites\\eroneko\\frontend\\src\\contexts\\auth\\index.js",["259","260","261"],"import React, { createContext, useState, useEffect, useContext } from 'react';\r\nimport { auth, admin } from '../../services/firebase';\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport default function AuthProvider({ children }){\r\n\r\n    const [currentUser, setCurrentUser] = useState(null);\r\n    const [userToken, setUserToken] = useState(null);\r\n\r\n    const signIn = (email, password) => {\r\n        return auth.signInWithEmailAndPassword(email, password);\r\n    }\r\n    \r\n    const signUp = (email, password, user_name, photo_url) => {\r\n        return auth.createUserWithEmailAndPassword(email, password).then(creation => {\r\n            return creation.user.updateProfile({\r\n                displayName: user_name,\r\n                photoURL: photo_url\r\n            });\r\n        });\r\n    }\r\n\r\n    const signOut = () => {\r\n        return auth.signOut().then(() => {\r\n\r\n        }).catch((error) => {\r\n            console.log(error);\r\n        })\r\n    }\r\n\r\n    useEffect(async () => {\r\n\r\n        if(currentUser){\r\n            setUserToken(await currentUser.getIdToken());\r\n        }\r\n\r\n    }, [currentUser]);\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = auth.onAuthStateChanged(user => {\r\n            setCurrentUser(user);\r\n        });\r\n\r\n        return unsubscribe;\r\n    }, []);\r\n\r\n    return(\r\n        <AuthContext.Provider value={{currentUser, signIn, signUp, signOut, userToken }}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    )\r\n}","E:\\Users\\alexa\\Documents\\scripts\\websites\\eroneko\\frontend\\src\\services\\firebase.js",[],"E:\\Users\\alexa\\Documents\\scripts\\websites\\eroneko\\frontend\\src\\pages\\SignUpPage\\index.js",[],"E:\\Users\\alexa\\Documents\\scripts\\websites\\eroneko\\frontend\\src\\pages\\SignUpPage\\styles.js",[],"E:\\Users\\alexa\\Documents\\scripts\\websites\\eroneko\\frontend\\src\\components\\Form\\index.js",["262","263"],"import React, { useEffect, useRef } from 'react';\r\nimport { useField } from '@unform/core';\r\n\r\nexport { Form } from '@unform/web';\r\n\r\nexport function Input({ name, ...rest }) {\r\n  \r\n  const inputRef = useRef(null);\r\n  const { fieldName, defaultValue, registerField, error } = useField(name);\r\n\r\n  useEffect(() => {\r\n    registerField({\r\n      name: fieldName,\r\n      ref: inputRef.current,\r\n      path: 'value',\r\n    });\r\n  }, [fieldName, registerField]);\r\n\r\n  return <input ref={inputRef} defaultValue={defaultValue} {...rest} />;\r\n}\r\n\r\nexport function Checkbox({name, ...rest}){\r\n  const inputRef = useRef(null);\r\n  const { fieldName, defaultValue, registerField, error } = useField(name);\r\n\r\n  useEffect(() => {\r\n    registerField({\r\n      name: fieldName,\r\n      ref: inputRef.current,\r\n      path: 'checked',\r\n    });\r\n  }, [fieldName, registerField]);\r\n\r\n  return <input ref={inputRef} defaultValue={defaultValue} {...rest} />;\r\n}","E:\\Users\\alexa\\Documents\\scripts\\websites\\eroneko\\frontend\\src\\components\\UserOptions\\index.js",["264","265"],"import React, { useState, useContext } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AccountBoxIcon from '@material-ui/icons/AccountBox';\r\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport Grow from '@material-ui/core/Grow';\r\n\r\n//styles\r\nimport { UserOptionsContainer, UnorderedList, ListItem } from './styles';\r\n\r\n//contexts\r\nimport { AuthContext } from '../../contexts/auth';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nexport default function UserOptions() {\r\n\r\n    const history = useHistory();\r\n    const [ checked, setChecked ] = useState(false);\r\n\r\n    const { currentUser, signOut } = useContext(AuthContext);\r\n\r\n    const handleClick = () => {\r\n        setChecked(!checked);\r\n    };\r\n\r\n    const handleClickAway = () => {\r\n        setChecked(false);\r\n    }\r\n\r\n    const to_profile = () => {\r\n        history.push({\r\n            pathname: `/p/${currentUser.uid}`\r\n        })\r\n    }\r\n\r\n    return (\r\n        <ClickAwayListener onClickAway={handleClickAway}>\r\n            <UserOptionsContainer>\r\n                <IconButton size='small' onClick={handleClick} >\r\n                    <Avatar alt={currentUser.displayName} src={currentUser.photoURL} />\r\n                </IconButton>\r\n                <Grow in={checked} style={{ transformOrigin: '500px 0 0' }} {...(checked ? { timeout: 200 } : {})}>\r\n                    <UnorderedList>\r\n                        {/* <ListItem onClick={to_profile}>\r\n                            <AccountBoxIcon color='inherit' fontSize='inherit'/>\r\n                            <span>\r\n                                Profile\r\n                            </span>\r\n                        </ListItem> */}\r\n                        <ListItem onClick={signOut}>\r\n                            <ExitToAppIcon color='inherit' fontSize='inherit'/>\r\n                            <span>\r\n                                Logout\r\n                            </span>\r\n                        </ListItem>\r\n                    </UnorderedList>\r\n                </Grow>\r\n            </UserOptionsContainer>\r\n        </ClickAwayListener>\r\n    );\r\n}\r\n","E:\\Users\\alexa\\Documents\\scripts\\websites\\eroneko\\frontend\\src\\components\\UserOptions\\styles.js",[],"E:\\Users\\alexa\\Documents\\scripts\\websites\\eroneko\\frontend\\src\\pages\\ProfilePage\\index.js",["266","267","268"],"import React, { useState, useEffect, useCallback, useContext } from 'react';\r\nimport { api } from '../../services/api';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport { LoaderContext } from '../../contexts/loader';\r\nimport { AuthContext } from '../../contexts/auth';\r\n\r\nimport {\r\n    ProfileContainer,\r\n    Header,\r\n    Section,\r\n    UserAvatar,\r\n    SectionHeader,\r\n    UserInformation,\r\n    InformationText,\r\n    UserName,\r\n    SectionTitleHolder,\r\n    SectionTitle\r\n} from './styles';\r\n\r\n\r\nexport default function ProfilePage({ computedMatch, location, history }) {\r\n\r\n    const { setIsLoading } = useContext(LoaderContext);  \r\n    const [userName, setUserName] = useState(null);\r\n    const [creationTime, setCreationTime] = useState(null);\r\n    const [lastSignInTime, setLastSignInTime] = useState(null);\r\n    const [avatar, setAvatar] = useState('');\r\n\r\n    useEffect(() => {\r\n        setIsLoading(true);\r\n        api.get(`/user/${computedMatch.params.user_id}`).then(res => {\r\n            console.log(res);\r\n            setUserName(res.data.displayName);\r\n            setLastSignInTime(res.data.metadata.lastSignInTime);\r\n            setCreationTime(res.data.metadata.creationTime);\r\n            setAvatar(res.data.photoURL);\r\n            setIsLoading(false);\r\n        });\r\n    }, [computedMatch.params])\r\n\r\n    return(\r\n        <ProfileContainer>\r\n            <Header />\r\n            <Section>\r\n                <SectionHeader>\r\n                    <UserAvatar src={avatar}/>\r\n                    <UserInformation>\r\n                        <UserName>{userName}</UserName>\r\n                        <InformationText><strong>Member since</strong> <span>{creationTime}</span></InformationText>\r\n                        <InformationText><strong>Last time online</strong> <span>{lastSignInTime}</span></InformationText>\r\n                    </UserInformation>\r\n                </SectionHeader>\r\n            </Section>\r\n            <Section>\r\n                <SectionTitleHolder>\r\n                    <SectionTitle>\r\n                        <FavoriteIcon /> Last Favorites\r\n                    </SectionTitle>\r\n                </SectionTitleHolder>\r\n                \r\n            </Section>\r\n        </ProfileContainer>\r\n    )\r\n}","E:\\Users\\alexa\\Documents\\scripts\\websites\\eroneko\\frontend\\src\\pages\\ProfilePage\\styles.js",[],{"ruleId":"269","replacedBy":"270"},{"ruleId":"271","replacedBy":"272"},{"ruleId":"273","severity":1,"message":"274","line":22,"column":8,"nodeType":"275","endLine":22,"endColumn":10,"suggestions":"276"},{"ruleId":"273","severity":1,"message":"277","line":24,"column":25,"nodeType":"278","endLine":24,"endColumn":36},{"ruleId":"273","severity":1,"message":"279","line":37,"column":8,"nodeType":"275","endLine":37,"endColumn":10,"suggestions":"280"},{"ruleId":"281","severity":1,"message":"282","line":2,"column":10,"nodeType":"278","messageId":"283","endLine":2,"endColumn":14},{"ruleId":"281","severity":1,"message":"284","line":3,"column":10,"nodeType":"278","messageId":"283","endLine":3,"endColumn":13},{"ruleId":"281","severity":1,"message":"285","line":3,"column":15,"nodeType":"278","messageId":"283","endLine":3,"endColumn":27},{"ruleId":"281","severity":1,"message":"286","line":20,"column":18,"nodeType":"278","messageId":"283","endLine":20,"endColumn":25},{"ruleId":"273","severity":1,"message":"287","line":24,"column":8,"nodeType":"275","endLine":24,"endColumn":25,"suggestions":"288"},{"ruleId":"281","severity":1,"message":"289","line":30,"column":18,"nodeType":"278","messageId":"283","endLine":30,"endColumn":19},{"ruleId":"273","severity":1,"message":"290","line":33,"column":8,"nodeType":"275","endLine":33,"endColumn":25,"suggestions":"291"},{"ruleId":"273","severity":1,"message":"292","line":39,"column":8,"nodeType":"275","endLine":39,"endColumn":15,"suggestions":"293"},{"ruleId":"273","severity":1,"message":"287","line":67,"column":8,"nodeType":"275","endLine":67,"endColumn":18,"suggestions":"294"},{"ruleId":"273","severity":1,"message":"295","line":167,"column":8,"nodeType":"275","endLine":167,"endColumn":24,"suggestions":"296"},{"ruleId":"281","severity":1,"message":"297","line":1,"column":8,"nodeType":"278","messageId":"283","endLine":1,"endColumn":13},{"ruleId":"281","severity":1,"message":"297","line":1,"column":8,"nodeType":"278","messageId":"283","endLine":1,"endColumn":13},{"ruleId":"281","severity":1,"message":"298","line":1,"column":39,"nodeType":"278","messageId":"283","endLine":1,"endColumn":48},{"ruleId":"281","severity":1,"message":"299","line":5,"column":8,"nodeType":"278","messageId":"283","endLine":5,"endColumn":22},{"ruleId":"281","severity":1,"message":"300","line":7,"column":8,"nodeType":"278","messageId":"283","endLine":7,"endColumn":22},{"ruleId":"281","severity":1,"message":"301","line":8,"column":8,"nodeType":"278","messageId":"283","endLine":8,"endColumn":21},{"ruleId":"281","severity":1,"message":"302","line":9,"column":8,"nodeType":"278","messageId":"283","endLine":9,"endColumn":18},{"ruleId":"281","severity":1,"message":"303","line":10,"column":8,"nodeType":"278","messageId":"283","endLine":10,"endColumn":23},{"ruleId":"281","severity":1,"message":"304","line":11,"column":8,"nodeType":"278","messageId":"283","endLine":11,"endColumn":25},{"ruleId":"281","severity":1,"message":"305","line":14,"column":8,"nodeType":"278","messageId":"283","endLine":14,"endColumn":22},{"ruleId":"281","severity":1,"message":"306","line":16,"column":8,"nodeType":"278","messageId":"283","endLine":16,"endColumn":16},{"ruleId":"281","severity":1,"message":"307","line":62,"column":11,"nodeType":"278","messageId":"283","endLine":62,"endColumn":21},{"ruleId":"281","severity":1,"message":"308","line":16,"column":5,"nodeType":"278","messageId":"283","endLine":16,"endColumn":15},{"ruleId":"273","severity":1,"message":"309","line":35,"column":8,"nodeType":"275","endLine":35,"endColumn":15,"suggestions":"310"},{"ruleId":"281","severity":1,"message":"311","line":15,"column":9,"nodeType":"278","messageId":"283","endLine":15,"endColumn":14},{"ruleId":"273","severity":1,"message":"312","line":36,"column":8,"nodeType":"275","endLine":36,"endColumn":26,"suggestions":"313"},{"ruleId":"281","severity":1,"message":"297","line":1,"column":8,"nodeType":"278","messageId":"283","endLine":1,"endColumn":13},{"ruleId":"281","severity":1,"message":"314","line":1,"column":38,"nodeType":"278","messageId":"283","endLine":1,"endColumn":48},{"ruleId":"273","severity":1,"message":"315","line":32,"column":8,"nodeType":"275","endLine":32,"endColumn":18,"suggestions":"316"},{"ruleId":"273","severity":1,"message":"317","line":22,"column":8,"nodeType":"275","endLine":22,"endColumn":10,"suggestions":"318"},{"ruleId":"273","severity":1,"message":"319","line":26,"column":15,"nodeType":"320","endLine":44,"endColumn":6},{"ruleId":"281","severity":1,"message":"314","line":1,"column":53,"nodeType":"278","messageId":"283","endLine":1,"endColumn":63},{"ruleId":"281","severity":1,"message":"321","line":2,"column":16,"nodeType":"278","messageId":"283","endLine":2,"endColumn":21},{"ruleId":"273","severity":1,"message":"319","line":32,"column":15,"nodeType":"320","endLine":38,"endColumn":6},{"ruleId":"281","severity":1,"message":"311","line":9,"column":51,"nodeType":"278","messageId":"283","endLine":9,"endColumn":56},{"ruleId":"281","severity":1,"message":"311","line":24,"column":51,"nodeType":"278","messageId":"283","endLine":24,"endColumn":56},{"ruleId":"281","severity":1,"message":"300","line":4,"column":8,"nodeType":"278","messageId":"283","endLine":4,"endColumn":22},{"ruleId":"281","severity":1,"message":"307","line":31,"column":11,"nodeType":"278","messageId":"283","endLine":31,"endColumn":21},{"ruleId":"281","severity":1,"message":"322","line":1,"column":38,"nodeType":"278","messageId":"283","endLine":1,"endColumn":49},{"ruleId":"281","severity":1,"message":"323","line":5,"column":10,"nodeType":"278","messageId":"283","endLine":5,"endColumn":21},{"ruleId":"273","severity":1,"message":"324","line":39,"column":8,"nodeType":"275","endLine":39,"endColumn":30,"suggestions":"325"},"no-native-reassign",["326"],"no-negated-in-lhs",["327"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'get_popular'. Either include it or remove the dependency array.","ArrayExpression",["328"],"React Hook useCallback does nothing when called with only one argument. Did you forget to pass an array of dependencies?","Identifier","React Hook useEffect has missing dependencies: 'computedMatch.params.id' and 'location.state'. Either include them or remove the dependency array.",["329"],"no-unused-vars","'Link' is defined but never used.","unusedVar","'api' is defined but never used.","'axios_object' is defined but never used.","'setSort' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'get_doujins'. Either include it or remove the dependency array.",["330"],"'_' is assigned a value but never used.","React Hook useCallback has a missing dependency: 'location.state'. Either include it or remove the dependency array.",["331"],"React Hook useCallback has a missing dependency: 'sort'. Either include it or remove the dependency array.",["332"],["333"],"React Hook useCallback has missing dependencies: 'computedMatch.params.id' and 'setIsLoading'. Either include them or remove the dependency array.",["334"],"'React' is defined but never used.","'useEffect' is defined but never used.","'LocalOfferIcon' is defined but never used.","'AccountBoxIcon' is defined but never used.","'PeopleAltIcon' is defined but never used.","'PersonIcon' is defined but never used.","'BubbleChartIcon' is defined but never used.","'EmojiEmotionsIcon' is defined but never used.","'FindInPageIcon' is defined but never used.","'InfoIcon' is defined but never used.","'to_profile' is assigned a value but never used.","'UserAvatar' is defined but never used.","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["335"],"'error' is assigned a value but never used.","React Hook useCallback has missing dependencies: 'doujins' and 'paginate_mode'. Either include them or remove the dependency array.",["336"],"'useContext' is defined but never used.","React Hook useEffect has missing dependencies: 'body', 'doujins', and 'route_path'. Either include them or remove the dependency array.",["337"],"React Hook useEffect has a missing dependency: 'get_total_doujins'. Either include it or remove the dependency array.",["338"],"Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","'admin' is defined but never used.","'useCallback' is defined but never used.","'AuthContext' is defined but never used.","React Hook useEffect has a missing dependency: 'setIsLoading'. Either include it or remove the dependency array.",["339"],"no-global-assign","no-unsafe-negation",{"desc":"340","fix":"341"},{"desc":"342","fix":"343"},{"desc":"344","fix":"345"},{"desc":"346","fix":"347"},{"desc":"348","fix":"349"},{"desc":"350","fix":"351"},{"desc":"352","fix":"353"},{"desc":"354","fix":"355"},{"desc":"356","fix":"357"},{"desc":"358","fix":"359"},{"desc":"360","fix":"361"},{"desc":"362","fix":"363"},"Update the dependencies array to be: [get_popular]",{"range":"364","text":"365"},"Update the dependencies array to be: [computedMatch.params.id, location.state]",{"range":"366","text":"367"},"Update the dependencies array to be: [get_doujins, location.search]",{"range":"368","text":"369"},"Update the dependencies array to be: [location.search, location.state]",{"range":"370","text":"371"},"Update the dependencies array to be: [query, sort]",{"range":"372","text":"373"},"Update the dependencies array to be: [get_doujins, location]",{"range":"374","text":"375"},"Update the dependencies array to be: [computedMatch.params.id, location.state, setIsLoading]",{"range":"376","text":"377"},"Update the dependencies array to be: [history, query]",{"range":"378","text":"379"},"Update the dependencies array to be: [loading, paginate_mode, doujins]",{"range":"380","text":"381"},"Update the dependencies array to be: [body, doujins, offset, route_path]",{"range":"382","text":"383"},"Update the dependencies array to be: [get_total_doujins]",{"range":"384","text":"385"},"Update the dependencies array to be: [computedMatch.params, setIsLoading]",{"range":"386","text":"387"},[697,699],"[get_popular]",[1322,1324],"[computedMatch.params.id, location.state]",[645,662],"[get_doujins, location.search]",[944,961],"[location.search, location.state]",[1158,1165],"[query, sort]",[2395,2405],"[get_doujins, location]",[5804,5820],"[computedMatch.params.id, location.state, setIsLoading]",[1036,1043],"[history, query]",[1304,1322],"[loading, paginate_mode, doujins]",[1101,1111],"[body, doujins, offset, route_path]",[584,586],"[get_total_doujins]",[1305,1327],"[computedMatch.params, setIsLoading]"]